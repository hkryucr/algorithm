{"ast":null,"code":"var _jsxFileName = \"/Users/henryryu/Desktop/deckofcards/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction Card(num, suit) {\n  this.num = num;\n  this.suit = suit;\n}\n\nconst generateDeck = () => {\n  const newDeck = new Set();\n  const suits = [\"♦\", \"♥\", \"♣\", \"♠\"];\n\n  for (const suit of suits) {\n    for (let i = 1; i <= 13; i++) {\n      newDeck.add(new Card(i, suit));\n    }\n  }\n\n  return newDeck;\n};\n\nconst drawCards = (num, deck, selected) => {\n  let arrDeck = Array.from(deck);\n  let ranNums = new Set();\n\n  while (ranNums.size < num) {\n    ranNums.add(Math.floor(Math.random(num) * deck.size));\n  }\n\n  let selectedCards = [];\n\n  for (const ranNum of ranNums) {\n    selectedCards.push(arrDeck[ranNum]);\n    deck.delete(arrDeck[ranNum]);\n  }\n\n  return [selectedCards, deck];\n};\n\nfunction App() {\n  const [deck, setDeck] = useState(generateDeck());\n  const [inputNum, setInputNum] = useState(\"\");\n  const [selected, setSelected] = useState([]);\n\n  const handleChange = e => {\n    setInputNum(e.target.value);\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    const curNum = +inputNum;\n\n    if (curNum > deck.size) {// error mesage - > we can't draw\n    } else {\n      // return array and new deck;\n      const [selectedCards, newDeck] = drawCards(inputNum, deck, selected);\n      setSelected(selectedCards);\n      setDeck(newDeck);\n    }\n  };\n\n  console.log(deck);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Deck of Cards\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    type: \"text\",\n    value: inputNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, selected.map(card => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 31\n    }\n  }, card.num, \" \", card.suit))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/henryryu/Desktop/deckofcards/src/App.js"],"names":["React","useState","Card","num","suit","generateDeck","newDeck","Set","suits","i","add","drawCards","deck","selected","arrDeck","Array","from","ranNums","size","Math","floor","random","selectedCards","ranNum","push","delete","App","setDeck","inputNum","setInputNum","setSelected","handleChange","e","target","value","handleClick","preventDefault","curNum","console","log","map","card"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nfunction Card (num, suit){\n  this.num = num;\n  this.suit = suit;\n}\n\nconst generateDeck = () => {\n  const newDeck = new Set();\n  const suits = [\"♦\", \"♥\", \"♣\", \"♠\"];\n  for(const suit of suits){\n    for(let i = 1; i <= 13; i++){\n      newDeck.add(new Card(i, suit));\n    }\n  }\n  return newDeck;\n}\n\nconst drawCards = (num, deck, selected) => {\n  let arrDeck = Array.from(deck);\n  let ranNums = new Set();\n  while(ranNums.size < num){\n    ranNums.add(Math.floor(Math.random(num) * deck.size));\n  }\n  let selectedCards = [];\n  for(const ranNum of ranNums){\n    selectedCards.push(arrDeck[ranNum]);\n    deck.delete(arrDeck[ranNum]);\n  }\n\n  return [selectedCards, deck];\n}\n\nfunction App() {\n\n  const [deck, setDeck] = useState(generateDeck());\n  const [inputNum, setInputNum] = useState(\"\");\n  const [selected, setSelected] = useState([]);\n\n  const handleChange = (e) => {\n    setInputNum(e.target.value);\n  }\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    const curNum = +inputNum;\n    if(curNum > deck.size){\n      // error mesage - > we can't draw\n    } else {\n      // return array and new deck;\n      const [ selectedCards, newDeck ]= drawCards(inputNum, deck, selected);\n      setSelected(selectedCards);\n      setDeck(newDeck);\n    }\n  }\n\n  console.log(deck);\n\n  return (\n    <div className=\"App\">\n      <h1>Deck of Cards</h1>\n      <input onChange={handleChange} type=\"text\" value={inputNum}/>\n      <button onClick={handleClick}>Submit</button>\n      <div className=\"cards\">\n        {selected.map(card => <div className=\"card\">{card.num} {card.suit}</div>)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}